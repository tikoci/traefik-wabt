module Traefik

from "runtime/unsafe/wasmi32" include WasmI32
from "runtime/unsafe/wasmi64" include WasmI64
from "runtime/unsafe/memory" include Memory
from "runtime/dataStructures" include DataStructures as DS

@unsafe
let log_level_debug = -1n 
@unsafe
let log_level_info = 0n 
@unsafe
let log_level_warn = 1n 
@unsafe
let log_level_error = 2n 
@unsafe
let log_level_none = 3n 

provide foreign wasm log: (
  WasmI32,
  WasmI32, WasmI32
) -> Void from "http_handler" 

@unsafe
let handle_request = () => {
   log(log_level_info, 0n, 0n)
   1N
}

@unsafe
let handle_response = (high: WasmI32, low: WasmI32) => {
   log(log_level_warn, 0n, 0n)
   return 
}

provide { handle_request, handle_response }
